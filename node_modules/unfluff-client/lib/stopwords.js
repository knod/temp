// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var _, cache, candiateWords, fs, getFilePath, path, removePunctuation, stopwords;
  path = require('path');
  _ = require('lodash');
  cache = {};

  // For more flexibility, look into webpack or, for browserify, bulkify or require-globify
  // require-globify had issues with things needing to be required in
  // main.js while they need to by dynamically invoked in here
  var languages = require( '../data/stopwords/stopwords-data.js' );  // End lanugages{}

  module.exports = stopwords = function (content, language) {

    var count, filePath, overlappingStopwords, stopWords, strippedInput, words;

    if ( !language ) { language = "en" }

    // Get the stopwords for the right language if we have it
    stopWords = null;
    try {
      stopWords = languages[ language ];
    } catch (err) {
      stopWords = null;
    }

    if ( !stopWords ) {
      console.error("WARNING: No stopwords file found for '" + language + "' - defaulting to English!");
      stopWords = languages[ 'en' ];
    }

    // Would language + '_stopwords' as property name be more clear?
    if (cache.hasOwnProperty(language)) {
      stopWords = cache[language];
    } else {
      cache[language] = stopWords;
    }
    strippedInput = removePunctuation(content);
    words = candiateWords(strippedInput);
    overlappingStopwords = [];
    count = 0;
    _.each(words, function (w) {
      count += 1;
      if (stopWords.indexOf(w.toLowerCase()) > -1)
        return overlappingStopwords.push(w.toLowerCase());
    });
    return {
      wordCount: count,
      stopwordCount: overlappingStopwords.length,
      stopWords: overlappingStopwords
    };
  };
  removePunctuation = function (content) {
    return content.replace(/[\|\@\<\>\[\]\"\'\.,-\/#\?!$%\^&\*\+;:{}=\-_`~()]/g, '');
  };
  candiateWords = function (strippedInput) {
    return strippedInput.split(' ');
  };
}.call(this);
